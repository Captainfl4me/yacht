name: Rust WASM CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup env
        run: rustup toolchain install nightly && rustup default nightly && rustup target add wasm32-unknown-emscripten    
      - name: Install EMCC
        run: git clone https://github.com/emscripten-core/emsdk.git && cd ./emsdk && ./emsdk install latest && ./emsdk activate latest
      - name: Build
        run: cd ./emsdk && source emsdk_env.sh && cd .. && ./build_wasm.sh

      - name: Setup Pages
        uses: actions/configure-pages@v3
      
      - name: Clean Output
        run: cd app && mkdir www && cp index.html ./www/ && cp ./target/wasm32-unknown-emscripten/release/yatch_app.d ./www/ && cp ./target/wasm32-unknown-emscripten/release/yatch-app.js ./www/ && cp ./target/wasm32-unknown-emscripten/release/yatch_app.wasm ./www/

      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./www"

  deploy-coverage:
    runs-on: ubuntu-latest
    needs: build
    
    permissions:
      pages: write
      id-token: write
    
    environment:
      # environment created automatically by GitHub
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
